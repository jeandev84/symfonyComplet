<?php

namespace App\Controller;

use App\Entity\Address;
use App\Entity\User;
use App\Services\GiftsService;
use App\Services\MyService;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Component\HttpFoundation\Cookie;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Session\SessionInterface;
use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
use Symfony\Component\Routing\Generator\UrlGeneratorInterface;
use App\Entity\Author;
use App\Entity\File;
use App\Entity\Pdf;
use App\Entity\Video;
use App\Services\ServiceInterface;
use Symfony\Component\Cache\Adapter\FilesystemAdapter;



/**
 * Class DefaultController
 * @package App\Controller
 */
class DefaultController extends AbstractController
{

    /**
     * @Route("/home", name="default", name="home")
     * @param Request $request
     * @return Response
     * @throws \Psr\Cache\InvalidArgumentException
     */
    public function index(Request $request)
    {
        /* $entityManager = $this->getDoctrine()->getManager(); */

        $cache = new FilesystemAdapter();
        $posts = $cache->getItem('database.get_posts');

        if(! $posts->isHit())
        {
           $posts_from_db = ['post 1', 'post 2', 'post 3'];
           dump('connected with database');
           $posts->set(serialize($posts_from_db));
           $posts->expiresAfter(5); // expires after 5 seconds
           $cache->save($posts);
        }

        // $cache->deleteItem('database.get_posts');

        $cache->clear();

        dump(unserialize($posts->get()));
        return $this->render('default/index.html.twig', [
           'controller_name' => 'DefaultController'
        ]);
    }


}
