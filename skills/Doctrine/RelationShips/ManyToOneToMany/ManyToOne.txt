# RELATION SHIP ( ManyToOne )
Many Videos belongs to One User
==================================================

$ bin/console make:entity Video

 created: src/Entity/Video.php
 created: src/Repository/VideoRepository.php

 Entity generated! Now let's add some fields!
 You can always add more fields later manually or by re-running this command.

 New property name (press <return> to stop adding fields):
 > title

 Field type (enter ? to see all types) [string]:
 >

 Field length [255]:
 >

 Can this field be null in the database (nullable) (yes/no) [no]:
 >

 updated: src/Entity/Video.php

 Add another property? Enter the property name (or press <return> to stop adding fields):
 > user

 Field type (enter ? to see all types) [string]:
 > relation

 What class should this entity be related to?:
 > User

What type of relationship is this?
 ------------ -----------------------------------------------------------------
  Type         Description
 ------------ -----------------------------------------------------------------
  ManyToOne    Each Video relates to (has) one User.
               Each User can relate to (can have) many Video objects

  OneToMany    Each Video can relate to (can have) many User objects.
               Each User relates to (has) one Video

  ManyToMany   Each Video can relate to (can have) many User objects.
               Each User can also relate to (can also have) many Video objects

  OneToOne     Each Video relates to (has) exactly one User.
               Each User also relates to (has) exactly one Video.
 ------------ -----------------------------------------------------------------

 Relation type? [ManyToOne, OneToMany, ManyToMany, OneToOne]:
 > ManyToOne

 Is the Video.user property allowed to be null (nullable)? (yes/no) [yes]:
 >

 Do you want to add a new property to User so that you can access/update Video objects from it - e.g. $user->getVideos()? (yes/no) [yes]:
 >

 A new property will also be added to the User class so that you can access the related Video objects from it.

 New field name inside User [videos]:
 >

 updated: src/Entity/Video.php
 updated: src/Entity/User.php

 Add another property? Enter the property name (or press <return> to stop adding fields):
 >



  Success!


 Next: When you're ready, create a migration with make:migration

=============================================================================================
LUNCH THIS COMMAND
=============================================================================================
$ bin/console doctrine:schema:drop -n -q --force --full-database && rm src/Migrations/*.php && bin/console make:migration && bin/console doctrine:migrations:migrate -n -q