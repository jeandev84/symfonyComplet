.ENV (Configuration) WILL USE SQLite
========================================

# IMPORTANT: You MUST configure your server version, either here or in config/packages/doctrine.yaml
# DATABASE_URL=mysql://db_user:db_password@127.0.0.1:3306/db_name?serverVersion=5.7
DATABASE_URL=sqlite:///%kernel.project_dir%/var/data.db
###< doctrine/doctrine-bundle ###


CREATE DATABASE
=========================================
$ bin/console doctrine:database:create


CREATE ENTITY
==========================================
$ bin/console make:entity  <==|| Enter


In AbstractSQLiteDriver.php line 70:

  An exception occurred in driver: could not find driver


In PDOConnection.php line 31:

  could not find driver


In PDOConnection.php line 27:

  could not find driver


doctrine:database:create [--shard SHARD] [--connection [CONNECTION]] [--if-not-exists] [-h|--help] [-q|--quiet] [-v|vv|vvv|--verbose] [-V|--version] [--ansi] [--no-ansi] [-n|--no-interaction] [-e|--env ENV] [--no-debug] [--] <command>

jeandev@jeandev-Lenovo-G580:/var/www/symfonyfull/skeleton$ bin/console doctrine:database:create
Created database `symfonyskills` for connection named default
jeandev@jeandev-Lenovo-G580:/var/www/symfonyfull/skeleton$ bin/console make:entity

 Class name of the entity to create or update (e.g. GentleJellybean):
 > User

 created: src/Entity/User.php
 created: src/Repository/UserRepository.php

 Entity generated! Now let's add some fields!
 You can always add more fields later manually or by re-running this command.

 New property name (press <return> to stop adding fields):
 > name

 Field type (enter ? to see all types) [string]:
 > ?

Main types
  * string
  * text
  * boolean
  * integer (or smallint, bigint)
  * float

Relationships / Associations
  * relation (a wizard ðŸ§™ will help you build the relation)
  * ManyToOne
  * OneToMany
  * ManyToMany
  * OneToOne

Array/Object Types
  * array (or simple_array)
  * json
  * object
  * binary
  * blob

Date/Time Types
  * datetime (or datetime_immutable)
  * datetimetz (or datetimetz_immutable)
  * date (or date_immutable)
  * time (or time_immutable)
  * dateinterval

Other Types
  * decimal
  * guid
  * json_array


 Field type (enter ? to see all types) [string]:
 >

 Field length [255]:
 >

 Can this field be null in the database (nullable) (yes/no) [no]:
 >

 updated: src/Entity/User.php

 Add another property? Enter the property name (or press <return> to stop adding fields):
 >



  Success!


 Next: When you're ready, create a migration with make:migration

# MIGRATION
=============================
$ bin/console make:migration

 Next: Review the new migration "src/Migrations/Version20191214225155.php"
 Then: Run the migration with php bin/console doctrine:migrations:migrate
 See https://symfony.com/doc/current/bundles/DoctrineMigrationsBundle/index.html


# MIGRATE
==============================

$ bin/console doctrine:migrations:migrate


                    Application Migrations


WARNING! You are about to execute a database migration that could result in schema changes and data loss. Are you sure you wish to continue? (y/n)
Migrating up to 20191214225155 from 0

  ++ migrating 20191214225155

     -> CREATE TABLE user (id INT AUTO_INCREMENT NOT NULL, name VARCHAR(255) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB

  ++ migrated (took 93.5ms, used 12M memory)

  ------------------------

  ++ finished in 104.3ms
  ++ used 12M memory
  ++ 1 migrations executed
  ++ 1 sql queries

