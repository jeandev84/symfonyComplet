<?php

namespace App\Controller;

use App\Entity\User;
use App\Services\GiftsService;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Component\HttpFoundation\Cookie;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Session\SessionInterface;
use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
use Symfony\Component\Routing\Generator\UrlGeneratorInterface;


/**
 * Class DefaultController
 * @package App\Controller
 */
class DefaultController extends AbstractController
{

    /**
     * @Route("/home/{id}", name="default", name="home")
     * @param Request $request
     * @param User $user
     * @return Response
     */
    public function index(Request $request, User $user)
    {
       $entityManager = $this->getDoctrine()->getManager();

       $user = new User();
       $user->setName('Жан-Клод');

       $entityManager->persist($user);
       $entityManager->flush();


       return $this->render('default/index.html.twig', [
           'controller_name' => 'DefaultController'
       ]);
    }


    /**
     * @param Request $request
     * @param User $user
     * @return Response
    */
    public function paramConvertor(Request $request, User $user)
    {
        # Get Entity Manager
        $entityManager = $this->getDoctrine()->getManager();

        dump($user);

        return $this->render('default/index.html.twig', [
            'controller_name' => 'DefaultController'
        ]);
    }


    /**
     * @param Request $request
     * @return Response
     */
    public function rawQueries(Request $request)
    {
        # Get Entity Manager
        $entityManager = $this->getDoctrine()->getManager();

        $conn = $entityManager->getConnection();

        $sql = '
       SELECT * FROM user u
       WHERE u.id > :id
       ';

        $stmt = $conn->prepare($sql);
        $stmt->execute(['id' => 3]);

        dump($stmt->fetchAll());


        return $this->render('default/index.html.twig', [
            'controller_name' => 'DefaultController'
        ]);
    }


    /**
     * @param Request $request
     * @return Response
    */
    public function delete(Request $request)
    {
        # Get Entity Manager
        $entityManager = $this->getDoctrine()->getManager();

        # Find User By Id you want to delete
        $id = 2;
        $user = $entityManager->getRepository(User::class)->find($id);

        dump($user);

        # Remove user
        $entityManager->remove($user);


        # Save in to database
        $entityManager->flush();


        dump($user);

        return $this->render('default/index.html.twig', [
            'controller_name' => 'DefaultController'
        ]);
    }


    /**
     * @param Request $request
     * @return Response
     */
    public function update(Request $request)
    {
        # Get Entity Manager
        $entityManager = $this->getDoctrine()->getManager();

        # Find User By Id
        $id = 1;
        $user = $entityManager->getRepository(User::class)->find($id);

        # If not found user we will throw an Exception
        if(! $user)
        {
            throw $this->createNotFoundException(
                'No user found id ' . $id
            );
        }

        # If founded user we'll set name
        $user->setName('New user name!');

        # Save in to database
        $entityManager->flush();


        dump($user);

        return $this->render('default/index.html.twig', [
            'controller_name' => 'DefaultController'
        ]);
    }



    /**
     * @param Request $request
     * @return Response
    */
    public function read(Request $request)
    {
        # Create
        $repository = $this->getDoctrine()->getRepository(User::class);

        /*
        # Find User By Id
        $user = $repository->find(1);

        # Find User By ( example : name )
        $user = $repository->findBy(['name' => 'Robert']);


        # Find One By (example : name and lastname )

        $user = $repository->findOneBy(['name' => 'Robert', 'id' => 5]);
        $user = $repository->findOneBy(['name' => 'Robert', 'lastname' => 'Brown']);

        dump($user);


        # Find By name and filter by id
        $users = $repository->findBy(
            ['name' => 'Robert'],
            ['id' => 'DESC']
        );

        # Find all users
        $users = $repository->findAll();
        dump($users);
        */


        return $this->render('default/index.html.twig', [
            'controller_name' => 'DefaultController'
        ]);
    }


    /**
     * @param Request $request
     * @return Response
     */
    public function create(Request $request)
    {
        # Create
        $entityManager = $this->getDoctrine()->getManager();

        $user = new User();
        $user->setName('Robert');
        $entityManager->persist($user);
        $entityManager->flush();

        dump('A new user was saved in the id of '. $user->getId());

        /* $user = $entityManager->getRepository(User::class)->find(1); */


        return $this->render('default/index.html.twig', [
            'controller_name' => 'DefaultController'
        ]);
    }


}
